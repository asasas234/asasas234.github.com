[{"title":"Mockito跟SpringBoot@Autowired组合使用方式","uid":"9f14b7d15ba15e4a4bdd3158410a83f4","slug":"Mockito跟SpringBoot-Autowired组合使用方式","date":"2022-06-04T06:10:53.000Z","updated":"2022-06-04T06:16:00.110Z","comments":true,"path":"api/articles/Mockito跟SpringBoot-Autowired组合使用方式.json","cover":null,"text":"有的时候，我们想绝大多数Bean在单测的时候，还是希望走正常的Bean注入,只有少部分Bean需要自己人工Mock结果，这个时候如何优雅的Mock Bean实例并自动和其他Bean实例一样进行注入呢？ 可以通过Mockito的@MockBean主键解决，代码如下 @SpringB...","link":"","photos":[],"count_time":{"symbolsCount":396,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"mockito","slug":"mockito","count":1,"path":"api/tags/mockito.json"},{"name":"SpringBoot","slug":"SpringBoot","count":1,"path":"api/tags/SpringBoot.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Eclipse-Collection之IntIntHashMap","uid":"e939d2a67c854d9584266b38aea34ab3","slug":"Eclipse-Collection之IntIntHashMap","date":"2022-05-23T14:09:07.000Z","updated":"2022-05-23T14:21:20.966Z","comments":true,"path":"api/articles/Eclipse-Collection之IntIntHashMap.json","cover":[],"text":"最近在设计1个功能，其中需要内存保存数据的全量索引，结构大概如下: Map&lt;Integer,Integer&gt; indexMap &#x3D; new HashMap&lt;&gt;(); 我跑单测观察这个Map占用内存的时候发现，110多万的数据要消耗500多MB内存...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"},{"name":"Eclipse-Collection","slug":"Eclipse-Collection","count":1,"path":"api/tags/Eclipse-Collection.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"翻译bpf-performance-tools第7章内存","uid":"ece203b53ac6e642a41832310009d6ab","slug":"翻译bpf-performance-tools第7章内存","date":"2022-05-21T12:29:12.000Z","updated":"2022-05-22T07:58:20.369Z","comments":true,"path":"api/articles/翻译bpf-performance-tools第7章内存.json","cover":[],"text":"Linux是一个基于虚拟内存的系统，其中每个进程都有自己的虚拟地址空间，并按需映射到物理内存。它的设计允许超额订阅物理内存，Linux通过一个页出守护进程和物理交换设备以及(作为最后手段)内存不足(OOM)杀手来管理物理内存。Linux使用空闲内存作为文件系统缓存，这一主题将在第...","link":"","photos":[],"count_time":{"symbolsCount":800,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"linux","slug":"linux","count":2,"path":"api/tags/linux.json"},{"name":"Memory","slug":"Memory","count":1,"path":"api/tags/Memory.json"},{"name":"bpf","slug":"bpf","count":1,"path":"api/tags/bpf.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]