{"total":7,"pageSize":12,"pageCount":1,"data":[{"title":"Mockito跟SpringBoot@Autowired组合使用方式","uid":"9f14b7d15ba15e4a4bdd3158410a83f4","slug":"Mockito跟SpringBoot-Autowired组合使用方式","date":"2022-06-04T06:10:53.000Z","updated":"2022-06-05T01:52:56.700Z","comments":true,"path":"api/articles/Mockito跟SpringBoot-Autowired组合使用方式.json","cover":null,"text":"有的时候，我们想绝大多数Bean在单测的时候，还是希望走正常的Bean注入,只有少部分Bean需要自己人工Mock结果，这个时候如何优雅的Mock Bean实例并自动和其他Bean实例一样进行注入呢？ 可以通过Mockito的@MockBean注解解决，代码如下 @SpringB...","link":"","photos":[],"count_time":{"symbolsCount":396,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"mockito","slug":"mockito","count":1,"path":"api/tags/mockito.json"},{"name":"SpringBoot","slug":"SpringBoot","count":1,"path":"api/tags/SpringBoot.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Eclipse-Collection之IntIntHashMap","uid":"e939d2a67c854d9584266b38aea34ab3","slug":"Eclipse-Collection之IntIntHashMap","date":"2022-05-23T14:09:07.000Z","updated":"2022-05-23T14:21:20.966Z","comments":true,"path":"api/articles/Eclipse-Collection之IntIntHashMap.json","cover":[],"text":"最近在设计1个功能，其中需要内存保存数据的全量索引，结构大概如下: Map&lt;Integer,Integer&gt; indexMap &#x3D; new HashMap&lt;&gt;(); 我跑单测观察这个Map占用内存的时候发现，110多万的数据要消耗500多MB内存...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"},{"name":"Eclipse-Collection","slug":"Eclipse-Collection","count":1,"path":"api/tags/Eclipse-Collection.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"native内存最佳实践","uid":"f929186e789271318e9dfdac1fb85b07","slug":"native内存最佳实践","date":"2022-05-21T01:43:03.000Z","updated":"2022-05-21T08:57:15.547Z","comments":true,"path":"api/articles/native内存最佳实践.json","cover":[],"text":"堆是Java应用程序中最大的内存消耗者，但JVM将分配和使用大量本机内存。虽然第7章从编程的角度讨论了有效管理堆的方法，但堆的配置以及它如何与操作系统的本机内存交互是影响应用程序整体性能的另一个重要因素。这里存在术语冲突，因为C程序员倾向于将其本机内存的一部分称为C堆。为了与以J...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"},{"name":"JVM","slug":"JVM","count":1,"path":"api/tags/JVM.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"高级文件IO","uid":"56a9693faf1b310ae2faaa7452bad4b8","slug":"高级文件IO","date":"2022-05-15T14:50:22.000Z","updated":"2022-05-17T15:24:40.530Z","comments":true,"path":"api/articles/高级文件IO.json","cover":[],"text":"通常，人们会对CPU及其性能感到紧张。虽然很重要，但在许多实际应用程序工作负载中，拖累性能的不是CPU，而是I&#x2F;O代码路径。这是完全可以理解的；回想一下，在第2章-虚拟内存中，我们展示了与RAM相比，磁盘速度慢了几个数量级。这种情况与网络I&#x2F;O类似；因此，由于...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[],"tags":[{"name":"linux","slug":"linux","count":1,"path":"api/tags/linux.json"},{"name":"IO","slug":"IO","count":1,"path":"api/tags/IO.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"RocketMQ-NameServer的源码阅读脉络","uid":"7a8ccfb903ca33a7195e4b4486061453","slug":"RocketMQ-NameServer的源码阅读脉络","date":"2022-05-15T04:00:02.000Z","updated":"2022-05-15T06:57:44.929Z","comments":true,"path":"api/articles/RocketMQ-NameServer的源码阅读脉络.json","cover":null,"text":"启动大概流程 NamesrvStartup 是启动类，会先调createNamesrvController 初始化配置，然后创建NamesrvController, 然后调Controller的静态start方法 NamesrvController的静态Start方法会先调ini...","link":"","photos":[],"count_time":{"symbolsCount":739,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"RocketMQ","slug":"RocketMQ","count":1,"path":"api/tags/RocketMQ.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Maven多模块统一管理版本","uid":"957c5556bfb48cc069f3d5abcb598019","slug":"Maven多模块统一管理版本","date":"2022-05-14T05:27:00.000Z","updated":"2022-05-14T06:00:29.061Z","comments":true,"path":"api/articles/Maven多模块统一管理版本.json","cover":null,"text":"之前写多模块项目的时候，一般都需要保证各模块的版本号是一致的，所以导致每次代码有变动需要升级版本的时候，都需要全局挨个替换，但是这种方式太麻烦，也不够优雅，由于最近工作是维护公司的apollo，所以我看了下apollo的pom文件里的方式，觉得还不错。 首先是要在多模块项目里的父...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"maven","slug":"maven","count":1,"path":"api/tags/maven.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"MySQL查询Value区分大小写","uid":"472d9f1a708133ccb720a7af7f9b0d65","slug":"MySQL查询Value区分大小写","date":"2022-05-14T02:23:27.000Z","updated":"2022-05-14T02:46:53.380Z","comments":true,"path":"api/articles/MySQL查询Value区分大小写.json","cover":[],"text":"今天1个同事问我1个问题，MySQL查询如何区分大小写，当时我就惊了，难道默认不区分吗？于是我做了一下尝试，在本地建了1个表，发现还真的不区分，效果如下: 然后我执行下面的SQL发现居然可以把zhangsan 查的到 select * from student where nam...","link":"","photos":[],"count_time":{"symbolsCount":302,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"mysql","slug":"mysql","count":1,"path":"api/tags/mysql.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}