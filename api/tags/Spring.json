{"name":"Spring","slug":"Spring","count":2,"postlist":[{"title":"ConditionalOnClass的坑","uid":"603da98ebad6deb878c273c2b1c31c67","slug":"ConditionalOnClass的坑","date":"2022-06-26T11:54:19.000Z","updated":"2022-06-26T12:00:52.046Z","comments":true,"path":"api/articles/ConditionalOnClass的坑.json","keywords":null,"cover":[],"text":" 上面的代码其实存在1个问题，就是ConditionalOnClass注解的使用其实是不正确的，声明在方法上并不能实现当HealthIndicator类不在classpath下的时候，这个Bean不生效，要想实现这个效果，必须要把它声明在类上，例如: @Configuration...","link":"","photos":[],"count_time":{"symbolsCount":673,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Spring","slug":"Spring","count":2,"path":"api/tags/Spring.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SpringBoot单测通过注解覆盖Spring配置","uid":"725e856f26b6befd144f449656c3dc6b","slug":"SpringBoot单测通过注解覆盖Spring配置","date":"2022-06-05T06:58:09.000Z","updated":"2022-06-17T08:24:56.933Z","comments":true,"path":"api/articles/SpringBoot单测通过注解覆盖Spring配置.json","keywords":null,"cover":null,"text":"在我们写SpringBoot的单测的时候,有时候可能需要指定特殊的配置,用来覆盖原有的配置，以前的做法通常是2种 在IDEA的RUN&#x2F;DEBUG Configurations 弹窗上设置-D启动参数 在单测上人工写1个static 代码块，然后里面写System.set...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"SpringBoot","slug":"SpringBoot","count":2,"path":"api/tags/SpringBoot.json"},{"name":"Spring","slug":"Spring","count":2,"path":"api/tags/Spring.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}