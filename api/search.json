[{"id":"957c5556bfb48cc069f3d5abcb598019","title":"Maven多模块统一管理版本","content":"之前写多模块项目的时候，一般都需要保证各模块的版本号是一致的，所以导致每次代码有变动需要升级版本的时候，都需要全局挨个替换，但是这种方式太麻烦，也不够优雅，由于最近工作是维护公司的apollo，所以我看了下apollo的pom文件里的方式，觉得还不错。\n首先是要在多模块项目里的父pom上，做如下配置\n&lt;groupId&gt;com.example&lt;&#x2F;groupId&gt;\n&lt;artifactId&gt;demo-mulitmodule-release-plugin&lt;&#x2F;artifactId&gt;\n&lt;version&gt;$&#123;reversion&#125;&lt;&#x2F;version&gt;\n&lt;packaging&gt;pom&lt;&#x2F;packaging&gt;\n&lt;properties&gt;\n\t&lt;reversion&gt;0.0.1-SNAPSHOT&lt;&#x2F;reversion&gt;\n&lt;&#x2F;properties&gt;\n\n为了精简，以上我只贴了相关的配置，packaging 是写死的，必须是pom,version要通过properties设置属性引用的方式，这样方便在后续子pom里通过同样的方式去引用，这样后续版本变化只改这里就可以了。groupId和artifactId 写自己的就行，这里只是为了合后面子pom的配置保持上下文一致。\n然后子pom的相关配置如下:\n&lt;parent&gt;\n\t&lt;groupId&gt;com.example&lt;&#x2F;groupId&gt;\n\t&lt;artifactId&gt;demo-mulitmodule-release-plugin&lt;&#x2F;artifactId&gt;\n\t&lt;version&gt;$&#123;reversion&#125;&lt;&#x2F;version&gt;\n\t&lt;relativePath&gt;..&#x2F;pom.xml&lt;&#x2F;relativePath&gt;\n&lt;&#x2F;parent&gt;\n\n上面配置就是明确子pom继承了前面的父pom，并通过$&#123;reversion&#125;实现父pom版本号的引用和relativePath的设置来定位父pom文件的位置。\n","slug":"Maven多模块统一管理版本","date":"2022-05-14T05:27:00.000Z","categories_index":"","tags_index":"maven","author_index":"李志博的博客"},{"id":"472d9f1a708133ccb720a7af7f9b0d65","title":"MySQL查询Value区分大小写","content":"今天1个同事问我1个问题，MySQL查询如何区分大小写，当时我就惊了，难道默认不区分吗？于是我做了一下尝试，在本地建了1个表，发现还真的不区分，效果如下: \n\n\n然后我执行下面的SQL发现居然可以把zhangsan 查的到\nselect * from student where name &#x3D; &#39;Zhangsan&#39;\n\n其中Z是我故意大写的，结果如下:\n\n\n要想解决这个问题，可以通过binary关键字解决，加在列的前面\nselect * from student where binary name &#x3D; &#39;Zhangsan&#39;\n\n这样就查不到了\n\n\n\n\n","slug":"MySQL查询Value区分大小写","date":"2022-05-14T02:23:27.000Z","categories_index":"","tags_index":"mysql","author_index":"李志博的博客"}]