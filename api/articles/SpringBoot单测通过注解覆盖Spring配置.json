{"title":"SpringBoot单测通过注解覆盖Spring配置","uid":"725e856f26b6befd144f449656c3dc6b","slug":"SpringBoot单测通过注解覆盖Spring配置","date":"2022-06-05T06:58:09.000Z","updated":"2022-06-17T08:24:56.933Z","comments":true,"path":"api/articles/SpringBoot单测通过注解覆盖Spring配置.json","keywords":null,"cover":null,"content":"<p>在我们写SpringBoot的单测的时候,有时候可能需要指定特殊的配置,用来覆盖原有的配置，以前的做法通常是2种</p>\n<ol>\n<li>在IDEA的RUN&#x2F;DEBUG Configurations 弹窗上设置-D启动参数</li>\n<li>在单测上人工写1个<code>static</code> 代码块，然后里面写System.setProperty</li>\n</ol>\n<p>以上第一种方式，如果我点的是IDEA左侧的启动按钮，会发现自动创建1个新的RUN&#x2F;DEBUG 配置,以前设置的配置就不起左右了， 还需要人工修改太麻烦。</p>\n<p>第二种方式又感觉不够优雅。</p>\n<p>昨天我在写单测的时候，又网上搜了下，发现原来SpringBoot本身为我们提供了1个叫<code>@TestPropertySource</code> 的注解,具体使用实例如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@SpringBootTest\n@TestPropertySource(properties &#x3D; &#123;\n        &quot;cube.cache.cacheFileDir&#x3D;&#x2F;tmp&#x2F;memory-financial-model-server&quot;,\n        &quot;seepln.datasource.select&#x3D;default&quot;,\n        &quot;datasource.mysql.password.encrypt&#x3D;false&quot;,\n        &quot;spring.datasource.hikari.jdbc-url&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;default_fxfwtc?autoReconnect&#x3D;true&amp;useUnicode&#x3D;true&amp;allowMultiQueries&#x3D;true&amp;characterEncoding&#x3D;utf8&quot;,\n        &quot;spring.datasource.hikari.username&#x3D;root&quot;,\n        &quot;spring.datasource.hikari.password&#x3D;xxx&quot;\n&#125;)\n@ActiveProfiles(&quot;test&quot;)\nclass CubeDataCacheServiceTest &#123;\n&#125;</code></pre>\n\n<p>只要像上面那样声明在测试类的上面,并按照这个格式去书写配置的KV项就好了。</p>\n","text":"在我们写SpringBoot的单测的时候,有时候可能需要指定特殊的配置,用来覆盖原有的配置，以前的做法通常是2种 在IDEA的RUN&#x2F;DEBUG Configurations 弹窗上设置-D启动参数 在单测上人工写1个static 代码块，然后里面写System.set...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"SpringBoot","slug":"SpringBoot","count":2,"path":"api/tags/SpringBoot.json"},{"name":"Spring","slug":"Spring","count":1,"path":"api/tags/Spring.json"}],"toc":"","author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"BigDecimal类的四个常见陷阱以及如何避免它们","uid":"2e752d116822fcd8f3fa0fbea2092f6c","slug":"BigDecimal类的四个常见陷阱以及如何避免它们","date":"2022-06-11T02:14:48.000Z","updated":"2022-06-17T08:24:03.804Z","comments":true,"path":"api/articles/BigDecimal类的四个常见陷阱以及如何避免它们.json","keywords":null,"cover":null,"text":"在Java中进行货币计算时，您可以使用java.math.BigDecimal–但要注意该类的一些独特挑战。 在使用Java进行商业计算时，尤其是对于货币，最好使用该类来避免与浮点算术相关的问题，如果使用两个基元类型之一：Float或Double(或它们的盒装类型对应类型)，则可...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":5,"path":"api/tags/Java.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"文件缓存的设计","uid":"2d0169f6f2111380cc34e7095654794f","slug":"文件缓存的设计","date":"2022-06-05T06:55:29.000Z","updated":"2022-06-18T03:24:16.145Z","comments":true,"path":"api/articles/文件缓存的设计.json","keywords":null,"cover":[],"text":"背景最近工作中需要做1个很有意思并且有一定挑战的事情，项目里有1个接口，如果是第一次查询，会一次性查整个表的所有数据，然后缓存在JVM内部，后续的搜索就都会查这个缓存，这个方案肯定是不合理的，但是未来也是有计划迁移到另外1个替代它的项目上，但是在迁移之前，领导叫我临时性的做下内存...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":5,"path":"api/tags/Java.json"},{"name":"工作","slug":"工作","count":2,"path":"api/tags/工作.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}