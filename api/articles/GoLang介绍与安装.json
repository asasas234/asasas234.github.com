{"title":"GoLang介绍与安装","uid":"90f1e8e7e7d3685880af5dfa3ff2eff7","slug":"GoLang介绍与安装","date":"2023-01-03T12:04:08.000Z","updated":"2023-01-03T13:00:43.285Z","comments":true,"path":"api/articles/GoLang介绍与安装.json","keywords":null,"cover":null,"content":"<p>这是我们的 Golang 教程系列中的第一篇教程。本教程介绍了 Go，还讨论了选择 Go 相对于其他编程语言的优势。我们还将学习如何在 Mac OS、Windows 和 Linux 中安装 Go。</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>Go 也称为 Golang，是一种由 Google 开发的开源、编译型和静态类型的编程语言。创建 Go 背后的关键人物是 Rob Pike、Ken Thompson 和 Robert Griesemer。 Go 于 2009 年 11 月公开发布。</p>\n<p>Go 是一种语法简单的通用编程语言，并由强大的标准库提供支持。 Go闪耀的关键领域之一是创建高度可用和可扩展的 Web 应用程序。 Go 还可以用于创建命令行应用程序、桌面应用程序甚至移动应用程序。</p>\n<h2 id=\"GO的优势\"><a href=\"#GO的优势\" class=\"headerlink\" title=\"GO的优势\"></a>GO的优势</h2><p>当有大量其他语言（如 python、ruby、nodejs ……）做同样的工作时，你为什么要选择 Go 作为你的服务器端编程语言？</p>\n<p>以下是我在选择 Go 时发现的一些优点：</p>\n<h3 id=\"语法简单\"><a href=\"#语法简单\" class=\"headerlink\" title=\"语法简单\"></a>语法简单</h3><p>语法简单明了，语言不会因不必要的功能而臃肿。这使得编写可读和可维护的代码变得容易。</p>\n<h3 id=\"编写并发编程容易\"><a href=\"#编写并发编程容易\" class=\"headerlink\" title=\"编写并发编程容易\"></a>编写并发编程容易</h3><p>并发性是语言的固有部分。因此，编写多线程程序是小菜一碟。这是通过我们将在即将到来的教程中讨论的 Goroutines 和通道实现的。</p>\n<h3 id=\"编译语言\"><a href=\"#编译语言\" class=\"headerlink\" title=\"编译语言\"></a>编译语言</h3><p>Go 是一种编译语言。源代码被编译成本机二进制文件。这在像 Node.js 中使用的 JavaScript 这样的解释型语言中是没有的。</p>\n<h3 id=\"快速编译\"><a href=\"#快速编译\" class=\"headerlink\" title=\"快速编译\"></a>快速编译</h3><p>Go 编译器非常棒，从一开始就设计得很快。</p>\n<h3 id=\"静态链接\"><a href=\"#静态链接\" class=\"headerlink\" title=\"静态链接\"></a>静态链接</h3><p>Go编译器支持静态链接。整个Go项目可以静态链接成一个大的二进制文件，它可以轻松地部署在云服务器中，而不必担心依赖关系。</p>\n<h3 id=\"GO工具\"><a href=\"#GO工具\" class=\"headerlink\" title=\"GO工具\"></a>GO工具</h3><p>Go 中的工具值得一提。 Go 捆绑了强大的工具，可帮助开发人员编写更好的代码。一些常用的工具是:</p>\n<ul>\n<li>gofmt - <a href=\"https://pkg.go.dev/cmd/gofmt\">gofmt</a> 用于自动格式化 go 源代码。它使用制表符进行缩进，使用空格进行对齐。</li>\n<li>vet - <a href=\"https://pkg.go.dev/cmd/vet\">vet</a> 分析 go 源代码并报告可能的可疑代码。 vet 报告的所有内容都不是真正的问题，但它能够捕获编译器未报告的错误，例如使用 Printf 时格式说明符不正确。</li>\n<li>golint -  <a href=\"https://github.com/golang/lint\">golint</a> 用于识别代码中的样式问题</li>\n</ul>\n<h3 id=\"垃圾收集\"><a href=\"#垃圾收集\" class=\"headerlink\" title=\"垃圾收集\"></a>垃圾收集</h3><p>Go 使用垃圾收集，因此内存管理几乎是自动处理的，开发人员不需要担心管理内存。这也有助于轻松编写并发程序。</p>\n<h3 id=\"语言规范简单\"><a href=\"#语言规范简单\" class=\"headerlink\" title=\"语言规范简单\"></a>语言规范简单</h3><p>语言规范非常简单。整个规范一页纸就能装下，您甚至可以用它来编写自己的编译器 :)</p>\n<h3 id=\"开源\"><a href=\"#开源\" class=\"headerlink\" title=\"开源\"></a>开源</h3><p>最后但并非最不重要的一点是，Go 是一个开源项目。您可以参与并为 Go 项目做出贡献。</p>\n<h2 id=\"使用-Go-构建的热门产品\"><a href=\"#使用-Go-构建的热门产品\" class=\"headerlink\" title=\"使用 Go 构建的热门产品\"></a>使用 Go 构建的热门产品</h2><p>以下是一些使用 Go 构建的流行产品:</p>\n<ul>\n<li>Google 使用 Go 开发了 Kubernetes。</li>\n<li>世界著名的容器化平台Docker就是使用Go开发的。</li>\n<li>Dropbox 已将其性能关键组件从 Python 迁移到 Go。</li>\n<li>Infoblox 的下一代网络产品是使用 Go 开发的。</li>\n</ul>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>Go 可以安装在 Mac、Windows 和 Linux 三个平台上。您可以从 <a href=\"https://golang.org/dl/\">https://golang.org/dl/</a> 下载相应平台的二进制文件。</p>\n<h3 id=\"Mac-OS\"><a href=\"#Mac-OS\" class=\"headerlink\" title=\"Mac OS\"></a>Mac OS</h3><p>从<a href=\"https://golang.org/dl/\">https://golang.org/dl/</a> 下载Mac OS安装程序。双击开始安装。按照提示操作，Golang将被安装在<code>/usr/local/go</code>中，并将<code>/usr/local/go/bin</code>文件夹加入你的PATH环境变量中。</p>\n<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p>从<a href=\"https://golang.org/dl/\">https://golang.org/dl/</a> 下载MSI安装程序。双击开始安装，并按照提示进行操作。这将把Go安装在<code>c:\\Go</code>的位置，也会把<code>c:\\Go\\bin</code>目录添加到你的路径环境变量中。</p>\n<h3 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h3><p>从<a href=\"https://golang.org/dl/\">https://golang.org/dl/</a> 下载tar文件并解压到<code>/usr/local</code>。</p>\n<p>将 <code>/usr/local/go/bin</code> 加入 PATH 环境变量中。这将在Linux中安装Go。</p>\n<h2 id=\"验证安装\"><a href=\"#验证安装\" class=\"headerlink\" title=\"验证安装\"></a>验证安装</h2><p>要验证 Go 是否安装成功，请在终端中键入命令 <code>go version</code>，它将输出已安装的 Go 版本。这是我终端的输出。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ go version\ngo version go1.19.3 darwin&#x2F;arm64</code></pre>\n\n<p>1.19.3是编写本教程时 Go 的最新版本。这确认 Go 已成功安装。在下一个教程中，我们将用 Go 编写我们的第一个 Hello World 程序 :)</p>\n","feature":true,"text":"这是我们的 Golang 教程系列中的第一篇教程。本教程介绍了 Go，还讨论了选择 Go 相对于其他编程语言的优势。我们还将学习如何在 Mac OS、Windows 和 Linux 中安装 Go。 介绍Go 也称为 Golang，是一种由 Google 开发的开源、编译型和静态类...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"golang基础教程翻译","slug":"golang基础教程翻译","count":1,"path":"api/tags/golang基础教程翻译.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GO%E7%9A%84%E4%BC%98%E5%8A%BF\"><span class=\"toc-text\">GO的优势</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95%E7%AE%80%E5%8D%95\"><span class=\"toc-text\">语法简单</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%B9%E6%98%93\"><span class=\"toc-text\">编写并发编程容易</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E8%AF%91%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">编译语言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BF%AB%E9%80%9F%E7%BC%96%E8%AF%91\"><span class=\"toc-text\">快速编译</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%99%E6%80%81%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">静态链接</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#GO%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">GO工具</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86\"><span class=\"toc-text\">垃圾收集</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E8%A8%80%E8%A7%84%E8%8C%83%E7%AE%80%E5%8D%95\"><span class=\"toc-text\">语言规范简单</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%80%E6%BA%90\"><span class=\"toc-text\">开源</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-Go-%E6%9E%84%E5%BB%BA%E7%9A%84%E7%83%AD%E9%97%A8%E4%BA%A7%E5%93%81\"><span class=\"toc-text\">使用 Go 构建的热门产品</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Mac-OS\"><span class=\"toc-text\">Mac OS</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Windows\"><span class=\"toc-text\">Windows</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux\"><span class=\"toc-text\">Linux</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AA%8C%E8%AF%81%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">验证安装</span></a></li></ol>","author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"介绍红黑树","uid":"d7ce011fd2434eab0f67698b6d1bed31","slug":"介绍红黑树","date":"2022-09-24T07:31:24.000Z","updated":"2022-09-25T01:39:20.722Z","comments":true,"path":"api/articles/介绍红黑树.json","keywords":null,"cover":[],"text":"1. 介绍在本文中，我们将了解什么是红黑树，以及为什么它们是如此流行的数据结构。 我们将从查看二叉搜索树和2-3棵树开始。从这里，我们将看到红黑树如何被认为是平衡2-3树的不同代表。 本文的目的是以一种简单的方式解释红黑树，因此我们不会深入研究所有可能的插入和删除情况的代码示例或...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"}],"author":{"name":"李志博的博客","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"分享Java、中间件 等技术与学习笔记。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}